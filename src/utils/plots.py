# pylint: skip-file
import matplotlib.pyplot as plt
import numpy as np

dataset_names = ['Amazon fashion', 'Amazon Prime Pantry', 'Amazon Software', 'Steam', 'Book Crossing']

def plot_exp_1():
  exp_range = np.arange(2, 15)
  ndcg_res_u = {'ItemKNN': 
                [[0.0807, 0.2025, 0.4477, 0.1703, 0.1649, 0.1200, 0.4178, 0.2649, 0.1289, 0.0843, 0.0502, 0.0000, 0.0000],
                [0.0721, 0.1163, 0.1159, 0.1083, 0.0898, 0.1007, 0.0801, 0.1002, 0.0705, 0.0928, 0.1119, 0.1123, 0.0955],
                [0.3581, 0.1851, 0.2245, 0.2104, 0.2217, 0.1894, 0.2451, 0.6028, 0.3601, 0.3487, 0.1816, 0.1474, 0.3972],
                [0.0000, 0.0000, 0.0353, 0.0620, 0.0626, 0.0403, 0.0528, 0.0603, 0.0344, 0.0430, 0.0424, 0.0563, 0.0402],
                [0.0039, 0.0070, 0.0072, 0.0054, 0.0081, 0.0058, 0.0061, 0.0074, 0.0084, 0.0065, 0.0044, 0.0089, 0.0089]],
                'SLiM': 
                [[0.0136, 0.0635, 0.2130, 0.0710, 0.0429, 0.0967, 0.7402, 0.4069, 0.1139, 0.0917, 0.0000, 0.0000, 0.0000],
                 [0.0000, 0.0008, 0.0014, 0.0014, 0.0034, 0.0053, 0.0061, 0.0044, 0.0029, 0.0157, 0.0041, 0.0223, 0.0208],
                 [0.0135, 0.0157, 0.1021, 0.1744, 0.1264, 0.1318, 0.1373, 0.6848, 0.2251, 0.2839, 0.1876, 0.1667, 0.3052],
                 [0.0000, 0.0000, 0.1246, 0.1410, 0.1487, 0.1293, 0.1806, 0.1626, 0.1230, 0.1550, 0.1500, 0.2353, 0.2097],
                 [0.0064, 0.0072, 0.0206, 0.0246, 0.0402, 0.0396, 0.0507, 0.0510, 0.0528, 0.0489, 0.0795, 0.1027, 0.0892]
                 ],
                'content based TF-IDF':
                [[0.0230, 0.0420, 0.1381, 0.0781, 0.0784, 0.1055, 0.7985, 0.4381, 0.2687, 0.0877, 0.1713, 0.2500, 0.0000],
                 [0.0780, 0.0393, 0.0538, 0.0592, 0.0643, 0.0765, 0.0777, 0.0752, 0.0548, 0.0869, 0.0829, 0.1057, 0.0668],
                 [0.0279, 0.0339, 0.0609, 0.0829, 0.0955, 0.0764, 0.0802, 0.2309, 0.1291, 0.1459, 0.1296, 0.1052, 0.1172],
                 [0.0000, 0.0000, 0.2222, 0.2657, 0.2121, 0.2449, 0.2720, 0.2248, 0.2727, 0.2255, 0.1688, 0.2615, 0.2812],
                 [0.0086, 0.0118, 0.0209, 0.0287, 0.0288, 0.0254, 0.0294, 0.0311, 0.0319, 0.0210, 0.0482, 0.0544, 0.0294]

                 ]
  }
  hr_res_u = {
    'ItemKNN': 
              [[0.1082, 0.2983, 0.5866, 0.1584, 0.2844, 0.2603, 0.8851, 0.5455, 0.3333, 0.1429, 0.1667, 0.0000, 0.0000],
               [0.0762, 0.1389, 0.1475, 0.1517, 0.1372, 0.1701, 0.1448, 0.1811, 0.1484, 0.1902, 0.2464, 0.2568, 0.2259],
               [0.3649, 0.2362, 0.3263, 0.3067, 0.3506, 0.2970, 0.4149, 0.8213, 0.5897, 0.5789, 0.2941, 0.3333, 0.6364],
               [0.0000, 0.0000, 0.0915, 0.1513, 0.1515, 0.1020, 0.1200, 0.1395, 0.0909, 0.1078, 0.1169, 0.1538, 0.1094],
               [0.0080, 0.0156, 0.0169, 0.0127, 0.0197, 0.0154, 0.0180, 0.0213, 0.0254, 0.0180, 0.0130, 0.0268, 0.0253]
               ], 
    'SLiM':
              [[0.0157, 0.0724, 0.2155, 0.0760, 0.0642, 0.1096, 0.8822, 0.4848, 0.2000, 0.1429, 0.0000, 0.0000, 0.0000],
               [0.0000, 0.0017, 0.0022, 0.0025, 0.0051, 0.0078, 0.0083, 0.0068, 0.0056, 0.0201, 0.0058, 0.0274, 0.0293],
               [0.0135, 0.0157, 0.1282, 0.2163, 0.1558, 0.1576, 0.2021, 0.7633, 0.2564, 0.3684, 0.2353, 0.1667, 0.4545],
               [0.0000, 0.0000, 0.1993, 0.2399, 0.2475, 0.2313, 0.2960, 0.2868, 0.2222, 0.2647, 0.2857, 0.4462, 0.3281],
               [0.0079, 0.0106, 0.0268, 0.0395, 0.0595, 0.0615, 0.0737, 0.0729, 0.0878, 0.0898, 0.1355, 0.1591, 0.1485]
               ],
    'content based TF-IDF':
              [[0.0324, 0.0674, 0.1675, 0.1156, 0.1294, 0.1611, 0.8028, 0.5077, 0.3611, 0.1333, 0.2667, 0.2500, 0.0000],
               [0.2222, 0.0685, 0.0956, 0.1112, 0.1120, 0.1478, 0.1489, 0.1386, 0.1105, 0.1728, 0.1582, 0.1986, 0.1458],
               [0.0405, 0.0630, 0.1206, 0.1626, 0.1818, 0.1697, 0.1596, 0.2512, 0.2051, 0.2632, 0.2353, 0.1667, 0.1818],
               [0.0000, 0.0000, 0.2222, 0.2657, 0.2121, 0.2449, 0.2720, 0.2248, 0.2727, 0.2255, 0.1688, 0.2615, 0.2812],
               [0.0144, 0.0204, 0.0363, 0.0538, 0.0496, 0.0519, 0.0620, 0.0567, 0.0665, 0.0464, 0.0842, 0.1000, 0.0693]
              ] 
  }
  ndcg_res_i = {'ItemKNN': 
                [[0.0047, 0.0049, 0.0109, 0.0092, 0.0406, 0.0230, 0.0572, 0.0206, 0.0561, 0.0508, 0.0242, 0.0292, 0.1058],
                 [0.0006, 0.0016, 0.0010, 0.0042, 0.0031, 0.0048, 0.0048, 0.0069, 0.0017, 0.0102, 0.0096, 0.0092, 0.0082],
                 [0.2011, 0.0204, 0.3326, 0.0255, 0.2649, 0.0586, 0.2411, 0.0509, 0.2700, 0.0190, 0.1552, 0.0531, 0.2980],
                 [0.0000, 0.0000, 0.0000, 0.0000, 0.0017, 0.0025, 0.0000, 0.0025, 0.0000, 0.0000, 0.0041, 0.0025, 0.0057],
                 [0.0000, 0.0013, 0.0026, 0.0030, 0.0034, 0.0019, 0.0040, 0.0020, 0.0018, 0.0018, 0.0026, 0.0032, 0.0032],
                 ],
                'SLiM': 
                [[0.0004, 0.0000, 0.0007, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
                 [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0022, 0.0047, 0.0000],
                 [0.0023, 0.0000, 0.0000, 0.0000, 0.0165, 0.0000, 0.0060, 0.0067, 0.0132, 0.0107, 0.0065, 0.0000, 0.0091],
                 [0.0000, 0.0000, 0.0015, 0.0000, 0.0000, 0.0000, 0.0059, 0.0000, 0.0063, 0.0000, 0.0015, 0.0095, 0.0138],
                 [0.0000, 0.0002, 0.0000, 0.0000, 0.0005, 0.0002, 0.0000, 0.0007, 0.0003, 0.0000, 0.0049, 0.0019, 0.0040]
                 ],
                'content based TF-IDF':
                [[0.0335, 0.0418, 0.0457, 0.0486, 0.0729, 0.0530, 0.0691, 0.0423, 0.0661, 0.0130, 0.1264, 0.0714, 0.0965],
                 [0.0122, 0.0257, 0.0297, 0.0431, 0.0353, 0.0281, 0.0441, 0.0418, 0.0292, 0.0502, 0.0568, 0.0489, 0.0464],
                 [0.0184, 0.0726, 0.0391, 0.0844, 0.0770, 0.0877, 0.0361, 0.0498, 0.0324, 0.0748, 0.0734, 0.0768, 0.0247],
                 [0.0000, 0.0218, 0.0160, 0.0155, 0.0091, 0.0074, 0.0282, 0.0154, 0.0156, 0.0109, 0.0190, 0.0018, 0.0404],
                 [0.0038, 0.0060, 0.0109, 0.0191, 0.0194, 0.0144, 0.0168, 0.0158, 0.0138, 0.0131, 0.0115, 0.0143, 0.0084]
                ]
  }
  hr_res_i = {'ItemKNN': 
                [[0.0071, 0.0097, 0.0155, 0.0179, 0.0811, 0.0375, 0.0725, 0.0206, 0.0900, 0.0779, 0.0519, 0.0583, 0.1618],
                 [0.0020, 0.0033, 0.0030, 0.0101, 0.0091, 0.0106, 0.0112, 0.0111, 0.0046, 0.0177, 0.0230, 0.0195, 0.0133],
                 [0.3107, 0.0402, 0.4897, 0.0432, 0.3944, 0.0941, 0.3645, 0.1277, 0.4570, 0.0508, 0.2288, 0.0946, 0.4545],
                 [0.0000, 0.0000, 0.0000, 0.0000, 0.0057, 0.0059, 0.0000, 0.0065, 0.0000, 0.0000, 0.0102, 0.0058, 0.0172],
                 [0.0000, 0.0039, 0.0071, 0.0077, 0.0088, 0.0061, 0.0101, 0.0050, 0.0053, 0.0046, 0.0064, 0.0083, 0.0090],
                 ],
                'SLiM': 
                [[0.0010, 0.0000, 0.0026, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
                 [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0058, 0.0075, 0.0000],
                 [0.0041, 0.0000, 0.0000, 0.0000, 0.0359, 0.0000, 0.0148, 0.0213, 0.0132, 0.0169, 0.0065, 0.0000, 0.0182],
                 [0.0000, 0.0000, 0.0048, 0.0000, 0.0000, 0.0000, 0.0059, 0.0000, 0.0132, 0.0000, 0.0051, 0.0233, 0.0431],
                 [0.0000, 0.0006, 0.0000, 0.0000, 0.0014, 0.0006, 0.0000, 0.0007, 0.0009, 0.0000, 0.0096, 0.0042, 0.0090]
                 ],
                'content based TF-IDF':
                [[0.0548, 0.0696, 0.0803, 0.0824, 0.1135, 0.0938, 0.1014, 0.0928, 0.1000, 0.0130, 0.1948, 0.0874, 0.1324],
                 [0.0281, 0.0451, 0.0607, 0.0850, 0.0652, 0.0531, 0.0815, 0.0843, 0.0564, 0.0870, 0.0978, 0.0930, 0.0915],
                 [0.0412, 0.1384, 0.0826, 0.1583, 0.1394, 0.1882, 0.0640, 0.1170, 0.0728, 0.1356, 0.1503, 0.1622, 0.0636],
                 [0.0000, 0.0345, 0.0335, 0.0428, 0.0171, 0.0237, 0.0355, 0.0325, 0.0263, 0.0325, 0.0305, 0.0058, 0.0948],
                 [0.0101, 0.0129, 0.0201, 0.0337, 0.0327, 0.0275, 0.0340, 0.0286, 0.0263, 0.0286, 0.0298, 0.0334, 0.0202]
                ]
  }
  for idx, f in enumerate(dataset_names):
    for model in ndcg_res_u:
      plt.plot(exp_range, ndcg_res_u[model][idx], label=model)
      plt.title(f'{f} - user restricted to k interactions')
      plt.xlabel('k')
      plt.ylabel('ndcg@10')
      plt.legend(loc ="lower right")
    plt.show()
    for model in hr_res_u:
      plt.plot(exp_range, hr_res_u[model][idx], label=model)
      plt.title(f'{f} - user restricted to k interactions')
      plt.xlabel('k')
      plt.ylabel('hr@10')
      plt.legend(loc ="lower right")
    plt.show()
    for model in ndcg_res_i:
      plt.plot(exp_range, ndcg_res_i[model][idx], label=model)
      plt.title(f'{f} - item restricted to k interactions')
      plt.xlabel('k')
      plt.ylabel('ndcg@10')
      plt.legend(loc ="lower right")
    plt.show()
    for model in hr_res_i:
      plt.plot(exp_range, hr_res_i[model][idx], label=model)
      plt.title(f'{f} - item restricted to k interactions')
      plt.xlabel('k')
      plt.ylabel('hr@10')
      plt.legend(loc ="lower right")
    plt.show()

def plot_exp_2():
  exp_range = np.arange(3, 15)
  ndcg_res = {'ItemKNN': 
                [[0.1412, 0.2097, 0.1369, 0.1778, 0.2340, 0.2971, 0.0943, 0.0691, 0.0419, 0.0418, 0.0437, 0.0599],
                 [0.0975, 0.0947, 0.0868, 0.0852, 0.0843, 0.0781, 0.0813, 0.0722, 0.0751, 0.0741, 0.0674, 0.0631],
                 [0.1921, 0.2497, 0.2637, 0.2912, 0.3282, 0.4030, 0.4603, 0.3094, 0.2528, 0.2177, 0.2779, 0.2459],
                 [0.0425, 0.0492, 0.0487, 0.0486, 0.0442, 0.0584, 0.0673, 0.0686, 0.0682, 0.0556, 0.0707, 0.0813],
                 [0.0051, 0.0058, 0.0080, 0.0091, 0.0087, 0.0102, 0.0109, 0.0121, 0.0124, 0.0119, 0.0135, 0.0130]
                 ],
                'SLiM': 
                [[0.0370, 0.0600, 0.1433, 0.2502, 0.3555, 0.4492, 0.1280, 0.0680, 0.0467, 0.0365, 0.0522, 0.0499],
                 [0.0053, 0.0152, 0.0341, 0.0559, 0.0740, 0.0896, 0.1037, 0.1191, 0.1295, 0.1295, 0.1344, 0.1343],
                 [0.0776, 0.1593, 0.2459, 0.3066, 0.3066, 0.3654, 0.4517, 0.5500, 0.3444, 0.2217, 0.2316, 0.2401],
                 [0.1297, 0.1337, 0.1453, 0.1638, 0.1741, 0.1730, 0.1891, 0.1841, 0.1905, 0.2145, 0.1903, 0.2003],
                 [0.0460, 0.0625, 0.0828, 0.0960, 0.0998, 0.1085, 0.1150, 0.1193, 0.1337, 0.1327, 0.1318, 0.1317]
                 ],
                'content based TF-IDF':
                [[0.1141, 0.1459, 0.1822, 0.2735, 0.3884, 0.4913, 0.1858, 0.1098, 0.0791, 0.0926, 0.1063, 0.0572],
                 [0.0633, 0.0701, 0.0745, 0.0805, 0.0825, 0.0878, 0.0958, 0.0957, 0.1023, 0.1067, 0.1134, 0.1184],
                 [0.0681, 0.0815, 0.1054, 0.1187, 0.1483, 0.1408, 0.1834, 0.1401, 0.1471, 0.0864, 0.1217, 0.0747],
                 [0.3165, 0.3441, 0.3679, 0.3849, 0.3891, 0.4053, 0.4180, 0.4388, 0.4450, 0.4605, 0.0000, 0.0000],
                 [0.0312, 0.0380, 0.0431, 0.0479, 0.0511, 0.0570, 0.0630, 0.0650, 0.0672, 0.0723, 0.0770, 0.0755]
                 ]
  }
  hr_res = {
    'ItemKNN': 
              [[0.2055, 0.3014, 0.2418, 0.3092, 0.4061, 0.5168, 0.1978, 0.1543, 0.1064, 0.0658, 0.1017, 0.1081],
               [0.1457, 0.1540, 0.1585, 0.1634, 0.1727, 0.1667, 0.1785, 0.1724, 0.1801, 0.1767, 0.1650, 0.1563],
               [0.2654, 0.3604, 0.3888, 0.4444, 0.4832, 0.5902, 0.6676, 0.5069, 0.3953, 0.3582, 0.4634, 0.4545],
               [0.1084, 0.1260, 0.1238, 0.1241, 0.1153, 0.1488, 0.1677, 0.1775, 0.1724, 0.1493, 0.1803, 0.2103],
               [0.0130, 0.0152, 0.0201, 0.0239, 0.0231, 0.0273, 0.0295, 0.0323, 0.0339, 0.0315, 0.0367, 0.0352]
               ], 
    'SLiM':
              [[0.0422, 0.0711, 0.1737, 0.3028, 0.4181, 0.5241, 0.2127, 0.1358, 0.1277, 0.0789, 0.1186, 0.1081],
               [0.0079, 0.0212, 0.0538, 0.0960, 0.1299, 0.1568, 0.1843, 0.2113, 0.2317, 0.2394, 0.2523, 0.2416],
               [0.0935, 0.1926, 0.3267, 0.4342, 0.4342, 0.4896, 0.5880, 0.6908, 0.5069, 0.3721, 0.3582, 0.4390],
               [0.2220, 0.2399, 0.2489, 0.2872, 0.3130, 0.3135, 0.3399, 0.3413, 0.3463, 0.4028, 0.3573, 0.3779],
               [0.0725, 0.1014, 0.1349, 0.1565, 0.1668, 0.1801, 0.1982, 0.2055, 0.2256, 0.2274, 0.2283, 0.2318]
               ],
    'content based TF-IDF':
              [[0.1404, 0.1746, 0.2140, 0.3078, 0.4225, 0.5168, 0.2276, 0.1667, 0.1277, 0.1579, 0.1864, 0.1351],
               [0.1140, 0.1316, 0.1390, 0.1493, 0.1570, 0.1664, 0.1782, 0.1868, 0.1908, 0.2096, 0.2082, 0.2305],
               [0.1235, 0.1463, 0.1808, 0.1914, 0.2368, 0.1960, 0.2312, 0.2153, 0.2326, 0.1343, 0.2195, 0.1515],
               [0.4630, 0.5027, 0.5363, 0.5614, 0.5722, 0.6019, 0.6035, 0.6382, 0.6478, 0.6682, 0.0000, 0.0000],
               [0.0590, 0.0732, 0.0854, 0.0942, 0.1002, 0.1100, 0.1222, 0.1271, 0.1329, 0.1385, 0.1530, 0.1480]
              ] 
  }
  for idx, f in enumerate(dataset_names):
    for model in ndcg_res:
      plt.plot(exp_range, ndcg_res[model][idx], label=model)
      plt.title(f'{f} - filtered more than k interactions')
      plt.xlabel('k')
      plt.ylabel('ndcg@10')
      plt.legend(loc ="lower right")
    plt.show()
    for model in hr_res:
      plt.plot(exp_range, hr_res[model][idx], label=model)
      plt.title(f'{f} - filtered more than k interactions')
      plt.xlabel('k')
      plt.ylabel('hr@10')
      plt.legend(loc ="lower right")
    plt.show()

if __name__ == '__main__':
  plot_exp_1()
  # plot_exp_2()